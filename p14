package P14;

import java.util.Scanner;

public class SubSum {

    // Function to check if a subset with the given sum exists
    public static boolean isSubsetSum(int[] set, int n, int sum) {
        // Create a 2D array to store the results of subproblems
        boolean[][] dp = new boolean[n + 1][sum + 1];

        // Initialize the first column as true (sum = 0 is always possible)
        for (int i = 0; i <= n; i++) {
            dp[i][0] = true;
        }

        // Initialize the first row (except dp[0][0]) as false (empty set cannot achieve any positive sum)
        for (int i = 1; i <= sum; i++) {
            dp[0][i] = false;
        }

        // Fill the subset table in a bottom-up manner
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= sum; j++) {
                if (set[i - 1] > j) {
                    dp[i][j] = dp[i - 1][j];
                } else {
                    dp[i][j] = dp[i - 1][j] || dp[i - 1][j - set[i - 1]];
                }
            }
        }

        return dp[n][sum];
    }

    // Main method to test the subset sum problem algorithm
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Input the set of integers
        System.out.print("Enter the number of elements in the set: ");
        int n = scanner.nextInt();
        int[] set = new int[n];

        System.out.println("Enter the elements of the set:");
        for (int i = 0; i < n; i++) {
            set[i] = scanner.nextInt();
        }

        // Input the target sum
        System.out.print("Enter the target sum: ");
        int sum = scanner.nextInt();

        // Check if there is a subset with the given sum
        if (isSubsetSum(set, n, sum)) {
            System.out.println("There exists a subset with the given sum.");
        } else {
            System.out.println("No subset with the given sum exists.");
        }

        scanner.close();
    }
}
